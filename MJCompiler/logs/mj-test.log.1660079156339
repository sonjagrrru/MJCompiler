INFO  23:05:51,376 - Compiling source file: C:\Users\sonja\OneDrive\Desktop\4. godina\Programski prevodioci 1\Sve za projekat\Sintaksna analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  23:05:51,384 - #2 program
INFO  23:05:51,384 - #47 p
INFO  23:05:51,384 - #3 const
INFO  23:05:51,384 - #47 int
INFO  23:05:51,384 - #47 size
INFO  23:05:51,384 - #25 =
INFO  23:05:51,384 - #45 10
INFO  23:05:51,384 - #4 ,
INFO  23:05:51,384 - #47 mize
INFO  23:05:51,384 - #25 =
INFO  23:05:51,384 - #45 5
INFO  23:05:51,384 - #5 ;
INFO  23:05:51,385 - #13 class
INFO  23:05:51,385 - #47 Table
INFO  23:05:51,385 - #19 {
INFO  23:05:51,385 - #47 int
INFO  23:05:51,385 - #47 pos
INFO  23:05:51,385 - #21 [
INFO  23:05:51,385 - #22 ]
INFO  23:05:51,386 - #4 ,
INFO  23:05:51,386 - #47 neg
INFO  23:05:51,386 - #21 [
INFO  23:05:51,386 - #22 ]
INFO  23:05:51,386 - #5 ;
INFO  23:05:51,386 - #19 {
INFO  23:05:51,386 - #12 void
INFO  23:05:51,386 - #47 putp
INFO  23:05:51,386 - #23 (
INFO  23:05:51,387 - #47 int
INFO  23:05:51,387 - #47 a
INFO  23:05:51,387 - #4 ,
INFO  23:05:51,387 - #47 int
INFO  23:05:51,387 - #47 idx
INFO  23:05:51,387 - #24 )
INFO  23:05:51,387 - #19 {
INFO  23:05:51,387 - #47 this
INFO  23:05:51,387 - #39 .
INFO  23:05:51,388 - #47 pos
INFO  23:05:51,388 - #21 [
INFO  23:05:51,388 - #47 idx
INFO  23:05:51,388 - #22 ]
INFO  23:05:51,388 - #25 =
INFO  23:05:51,388 - #47 a
INFO  23:05:51,388 - #5 ;
INFO  23:05:51,388 - #20 }
INFO  23:05:51,388 - #12 void
INFO  23:05:51,388 - #47 putn
INFO  23:05:51,388 - #23 (
INFO  23:05:51,388 - #47 int
INFO  23:05:51,388 - #47 a
INFO  23:05:51,388 - #4 ,
INFO  23:05:51,388 - #47 int
INFO  23:05:51,389 - #47 idx
INFO  23:05:51,389 - #24 )
INFO  23:05:51,389 - #19 {
INFO  23:05:51,389 - #47 this
INFO  23:05:51,389 - #39 .
INFO  23:05:51,389 - #47 neg
INFO  23:05:51,389 - #21 [
INFO  23:05:51,389 - #47 idx
INFO  23:05:51,389 - #22 ]
INFO  23:05:51,389 - #25 =
INFO  23:05:51,389 - #47 a
INFO  23:05:51,389 - #5 ;
INFO  23:05:51,389 - #20 }
INFO  23:05:51,389 - #47 int
INFO  23:05:51,389 - #47 getp
INFO  23:05:51,389 - #23 (
INFO  23:05:51,390 - #47 int
INFO  23:05:51,390 - #47 idx
INFO  23:05:51,390 - #24 )
INFO  23:05:51,390 - #19 {
INFO  23:05:51,390 - #11 return
INFO  23:05:51,390 - #47 pos
INFO  23:05:51,390 - #21 [
INFO  23:05:51,390 - #47 idx
INFO  23:05:51,390 - #22 ]
INFO  23:05:51,390 - #5 ;
INFO  23:05:51,390 - #20 }
INFO  23:05:51,390 - #47 int
INFO  23:05:51,391 - #47 getn
INFO  23:05:51,391 - #23 (
INFO  23:05:51,391 - #47 int
INFO  23:05:51,391 - #47 idx
INFO  23:05:51,391 - #24 )
INFO  23:05:51,391 - #19 {
INFO  23:05:51,391 - #11 return
INFO  23:05:51,391 - #47 neg
INFO  23:05:51,391 - #21 [
INFO  23:05:51,391 - #47 idx
INFO  23:05:51,391 - #22 ]
INFO  23:05:51,391 - #5 ;
INFO  23:05:51,391 - #20 }
INFO  23:05:51,391 - #20 }
INFO  23:05:51,391 - #20 }
INFO  23:05:51,392 - #13 class
INFO  23:05:51,392 - #47 Board
INFO  23:05:51,392 - #19 {
INFO  23:05:51,392 - #47 int
INFO  23:05:51,392 - #47 rows
INFO  23:05:51,392 - #4 ,
INFO  23:05:51,392 - #47 columns
INFO  23:05:51,392 - #5 ;
INFO  23:05:51,392 - #20 }
INFO  23:05:51,392 - #47 Board
INFO  23:05:51,392 - #47 board
INFO  23:05:51,392 - #5 ;
INFO  23:05:51,392 - #47 Table
INFO  23:05:51,392 - #47 val
INFO  23:05:51,392 - #5 ;
INFO  23:05:51,392 - #19 {
INFO  23:05:51,392 - #12 void
INFO  23:05:51,392 - #47 f
INFO  23:05:51,392 - #23 (
INFO  23:05:51,392 - #47 char
INFO  23:05:51,392 - #47 ch
INFO  23:05:51,392 - #4 ,
INFO  23:05:51,393 - #47 int
INFO  23:05:51,393 - #47 a
INFO  23:05:51,393 - #4 ,
INFO  23:05:51,393 - #47 int
INFO  23:05:51,393 - #47 arg
INFO  23:05:51,393 - #24 )
INFO  23:05:51,393 - #47 int
INFO  23:05:51,393 - #47 x
INFO  23:05:51,393 - #5 ;
INFO  23:05:51,393 - #19 {
INFO  23:05:51,393 - #9 break
INFO  23:05:51,393 - #5 ;
INFO  23:05:51,393 - #10 continue
INFO  23:05:51,393 - #5 ;
INFO  23:05:51,393 - #11 return
INFO  23:05:51,393 - #5 ;
INFO  23:05:51,393 - #11 return
INFO  23:05:51,393 - #35 -
INFO  23:05:51,394 - #45 5
INFO  23:05:51,394 - #5 ;
INFO  23:05:51,394 - #11 return
INFO  23:05:51,394 - #45 5
INFO  23:05:51,394 - #5 ;
INFO  23:05:51,394 - #11 return
INFO  23:05:51,394 - #45 2
INFO  23:05:51,394 - #34 +
INFO  23:05:51,394 - #45 3
INFO  23:05:51,394 - #5 ;
INFO  23:05:51,394 - #15 print
INFO  23:05:51,394 - #23 (
INFO  23:05:51,394 - #45 5
INFO  23:05:51,394 - #24 )
INFO  23:05:51,394 - #5 ;
INFO  23:05:51,394 - #47 x
INFO  23:05:51,394 - #40 ++
INFO  23:05:51,394 - #5 ;
INFO  23:05:51,394 - #20 }
INFO  23:05:51,394 - #12 void
INFO  23:05:51,394 - #47 main
INFO  23:05:51,394 - #23 (
INFO  23:05:51,395 - #24 )
INFO  23:05:51,395 - #47 int
INFO  23:05:51,395 - #47 x
INFO  23:05:51,395 - #4 ,
INFO  23:05:51,395 - #47 i
INFO  23:05:51,395 - #5 ;
INFO  23:05:51,395 - #47 char
INFO  23:05:51,395 - #47 c
INFO  23:05:51,395 - #5 ;
INFO  23:05:51,395 - #19 {
INFO  23:05:51,395 - #47 val
INFO  23:05:51,395 - #25 =
INFO  23:05:51,395 - #6 new
INFO  23:05:51,395 - #47 Table
INFO  23:05:51,395 - #5 ;
INFO  23:05:51,395 - #47 val
INFO  23:05:51,395 - #39 .
INFO  23:05:51,395 - #47 pos
INFO  23:05:51,395 - #25 =
INFO  23:05:51,395 - #6 new
INFO  23:05:51,395 - #47 int
INFO  23:05:51,395 - #21 [
INFO  23:05:51,395 - #47 size
INFO  23:05:51,395 - #22 ]
INFO  23:05:51,395 - #5 ;
INFO  23:05:51,395 - #47 val
INFO  23:05:51,396 - #39 .
INFO  23:05:51,396 - #47 neg
INFO  23:05:51,396 - #25 =
INFO  23:05:51,396 - #6 new
INFO  23:05:51,396 - #47 int
INFO  23:05:51,396 - #21 [
INFO  23:05:51,396 - #47 size
INFO  23:05:51,396 - #22 ]
INFO  23:05:51,396 - #5 ;
INFO  23:05:51,396 - #16 read
INFO  23:05:51,396 - #23 (
INFO  23:05:51,396 - #47 x
INFO  23:05:51,396 - #24 )
INFO  23:05:51,397 - #5 ;
INFO  23:05:51,398 - #47 i
INFO  23:05:51,398 - #25 =
INFO  23:05:51,398 - #45 0
INFO  23:05:51,398 - #5 ;
INFO  23:05:51,398 - #7 do
INFO  23:05:51,398 - #19 {
INFO  23:05:51,398 - #47 val
INFO  23:05:51,398 - #39 .
INFO  23:05:51,398 - #47 putp
INFO  23:05:51,398 - #23 (
INFO  23:05:51,398 - #45 0
INFO  23:05:51,398 - #4 ,
INFO  23:05:51,398 - #47 i
INFO  23:05:51,398 - #24 )
INFO  23:05:51,398 - #5 ;
INFO  23:05:51,398 - #47 val
INFO  23:05:51,398 - #39 .
INFO  23:05:51,398 - #47 putn
INFO  23:05:51,398 - #23 (
INFO  23:05:51,398 - #45 0
INFO  23:05:51,398 - #4 ,
INFO  23:05:51,398 - #47 i
INFO  23:05:51,398 - #24 )
INFO  23:05:51,398 - #5 ;
INFO  23:05:51,398 - #47 i
INFO  23:05:51,399 - #40 ++
INFO  23:05:51,399 - #5 ;
INFO  23:05:51,399 - #20 }
INFO  23:05:51,399 - #8 while
INFO  23:05:51,399 - #23 (
INFO  23:05:51,399 - #47 i
INFO  23:05:51,399 - #30 <
INFO  23:05:51,399 - #47 size
INFO  23:05:51,399 - #24 )
INFO  23:05:51,399 - #5 ;
INFO  23:05:51,399 - #47 skip
INFO  23:05:51,399 - #42 :
INFO  23:05:51,399 - #47 f
INFO  23:05:51,399 - #23 (
INFO  23:05:51,399 - #47 c
INFO  23:05:51,399 - #4 ,
INFO  23:05:51,399 - #47 x
INFO  23:05:51,399 - #4 ,
INFO  23:05:51,399 - #47 i
INFO  23:05:51,399 - #24 )
INFO  23:05:51,399 - #5 ;
INFO  23:05:51,399 - #17 if
INFO  23:05:51,399 - #23 (
INFO  23:05:51,399 - #45 5
INFO  23:05:51,399 - #24 )
INFO  23:05:51,399 - #9 break
INFO  23:05:51,399 - #5 ;
INFO  23:05:51,399 - #18 else
INFO  23:05:51,399 - #9 break
INFO  23:05:51,399 - #5 ;
INFO  23:05:51,400 - #47 board
INFO  23:05:51,400 - #25 =
INFO  23:05:51,400 - #6 new
INFO  23:05:51,400 - #47 Board
INFO  23:05:51,400 - #5 ;
INFO  23:05:51,400 - #16 read
INFO  23:05:51,400 - #23 (
INFO  23:05:51,400 - #47 board
INFO  23:05:51,400 - #39 .
INFO  23:05:51,400 - #47 rows
INFO  23:05:51,400 - #24 )
INFO  23:05:51,400 - #5 ;
INFO  23:05:51,400 - #47 x
INFO  23:05:51,400 - #25 =
INFO  23:05:51,400 - #47 board
INFO  23:05:51,400 - #39 .
INFO  23:05:51,400 - #47 rows
INFO  23:05:51,400 - #5 ;
INFO  23:05:51,400 - #7 do
INFO  23:05:51,401 - #19 {
INFO  23:05:51,401 - #17 if
INFO  23:05:51,401 - #23 (
INFO  23:05:51,401 - #47 x
INFO  23:05:51,401 - #31 <=
INFO  23:05:51,401 - #45 0
INFO  23:05:51,401 - #24 )
INFO  23:05:51,401 - #9 break
INFO  23:05:51,401 - #5 ;
INFO  23:05:51,401 - #17 if
INFO  23:05:51,401 - #23 (
INFO  23:05:51,401 - #45 0
INFO  23:05:51,401 - #31 <=
INFO  23:05:51,401 - #47 x
INFO  23:05:51,401 - #32 &&
INFO  23:05:51,401 - #47 x
INFO  23:05:51,401 - #30 <
INFO  23:05:51,401 - #47 size
INFO  23:05:51,401 - #24 )
INFO  23:05:51,401 - #19 {
INFO  23:05:51,401 - #47 val
INFO  23:05:51,401 - #39 .
INFO  23:05:51,401 - #47 putp
INFO  23:05:51,401 - #23 (
INFO  23:05:51,401 - #47 val
INFO  23:05:51,401 - #39 .
INFO  23:05:51,401 - #47 getp
INFO  23:05:51,402 - #23 (
INFO  23:05:51,402 - #47 x
INFO  23:05:51,402 - #24 )
INFO  23:05:51,402 - #34 +
INFO  23:05:51,402 - #45 1
INFO  23:05:51,402 - #24 )
INFO  23:05:51,402 - #5 ;
INFO  23:05:51,402 - #20 }
INFO  23:05:51,402 - #18 else
INFO  23:05:51,402 - #17 if
INFO  23:05:51,402 - #23 (
INFO  23:05:51,402 - #35 -
INFO  23:05:51,402 - #47 size
INFO  23:05:51,402 - #30 <
INFO  23:05:51,402 - #47 x
INFO  23:05:51,402 - #32 &&
INFO  23:05:51,402 - #47 x
INFO  23:05:51,402 - #30 <
INFO  23:05:51,402 - #45 0
INFO  23:05:51,402 - #24 )
INFO  23:05:51,402 - #19 {
INFO  23:05:51,402 - #47 val
INFO  23:05:51,402 - #39 .
INFO  23:05:51,402 - #47 putn
INFO  23:05:51,402 - #23 (
INFO  23:05:51,402 - #47 val
INFO  23:05:51,402 - #39 .
INFO  23:05:51,402 - #47 getn
INFO  23:05:51,402 - #23 (
INFO  23:05:51,402 - #35 -
INFO  23:05:51,402 - #47 x
INFO  23:05:51,402 - #24 )
INFO  23:05:51,402 - #34 +
INFO  23:05:51,402 - #45 1
INFO  23:05:51,403 - #24 )
INFO  23:05:51,403 - #5 ;
INFO  23:05:51,403 - #20 }
INFO  23:05:51,403 - #16 read
INFO  23:05:51,403 - #23 (
INFO  23:05:51,403 - #47 x
INFO  23:05:51,403 - #24 )
INFO  23:05:51,403 - #5 ;
INFO  23:05:51,403 - #20 }
INFO  23:05:51,403 - #8 while
INFO  23:05:51,403 - #23 (
INFO  23:05:51,403 - #46 true
INFO  23:05:51,403 - #24 )
INFO  23:05:51,403 - #5 ;
INFO  23:05:51,403 - #20 }
INFO  23:05:51,403 - #20 }
