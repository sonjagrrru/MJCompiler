// generated with ast extension for cup
// version 0.8
// 20/7/2022 3:20:58


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(Mulop Mulop);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(Assignop Assignop);
    public void visit(DesignatorElem DesignatorElem);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(DeclSingle DeclSingle);
    public void visit(Else Else);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(DeclList DeclList);
    public void visit(MethodName MethodName);
    public void visit(ClassBody ClassBody);
    public void visit(Condition Condition);
    public void visit(Statements Statements);
    public void visit(Factors Factors);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(TermExpr TermExpr);
    public void visit(VarDeclSingle VarDeclSingle);
    public void visit(MultipleVarDecl MultipleVarDecl);
    public void visit(HasExtends HasExtends);
    public void visit(MethodBody MethodBody);
    public void visit(ConstructorBody ConstructorBody);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ConstVal ConstVal);
    public void visit(ActPars ActPars);
    public void visit(Designators Designators);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptArgs OptArgs);
    public void visit(MethodArgs MethodArgs);
    public void visit(SingleStatement SingleStatement);
    public void visit(FormPars FormPars);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Sub Sub);
    public void visit(Add Add);
    public void visit(LessEqual LessEqual);
    public void visit(Less Less);
    public void visit(GreaterEqual GreaterEqual);
    public void visit(Greater Greater);
    public void visit(Differ Differ);
    public void visit(Same Same);
    public void visit(Assign Assign);
    public void visit(Label Label);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewExprFactor NewExprFactor);
    public void visit(NewFactor NewFactor);
    public void visit(BoolFactor BoolFactor);
    public void visit(CharFactor CharFactor);
    public void visit(NumFactor NumFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(DesignatorNonParamsFactor DesignatorNonParamsFactor);
    public void visit(DesignatorParamsFactor DesignatorParamsFactor);
    public void visit(SingleFactor SingleFactor);
    public void visit(FactorList FactorList);
    public void visit(Term Term);
    public void visit(SinglePositiveTerm SinglePositiveTerm);
    public void visit(MultipleTermExpr MultipleTermExpr);
    public void visit(SingleNegativeTerm SingleNegativeTerm);
    public void visit(SingleExpr SingleExpr);
    public void visit(Nullish Nullish);
    public void visit(SingleExpression SingleExpression);
    public void visit(NullishOperator NullishOperator);
    public void visit(RelopFact RelopFact);
    public void visit(ExprFact ExprFact);
    public void visit(ConditionFact ConditionFact);
    public void visit(ConditionFacts ConditionFacts);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ConditionTerms ConditionTerms);
    public void visit(ActualParameter ActualParameter);
    public void visit(ActualParameters ActualParameters);
    public void visit(ExprDesignatorElem ExprDesignatorElem);
    public void visit(IdentDesignatorElem IdentDesignatorElem);
    public void visit(NonDesignators NonDesignators);
    public void visit(DesignatorList DesignatorList);
    public void visit(DesignatorName DesignatorName);
    public void visit(Designator Designator);
    public void visit(DesignatorDecrement DesignatorDecrement);
    public void visit(DesignatorIncrement DesignatorIncrement);
    public void visit(DesignatorPars DesignatorPars);
    public void visit(DesignatorNoPars DesignatorNoPars);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(ElseDeclaration ElseDeclaration);
    public void visit(Return Return);
    public void visit(ReadStart ReadStart);
    public void visit(WhileStart WhileStart);
    public void visit(DoWhileEnd DoWhileEnd);
    public void visit(DoWhileStart DoWhileStart);
    public void visit(BracedStmnt BracedStmnt);
    public void visit(ReadStatement ReadStatement);
    public void visit(NumPrintStatement NumPrintStatement);
    public void visit(NoNumPrintStatement NoNumPrintStatement);
    public void visit(ReturnExprStetement ReturnExprStetement);
    public void visit(ReturnEmptyStatement ReturnEmptyStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(MatchedElse MatchedElse);
    public void visit(DesignatorStmnt DesignatorStmnt);
    public void visit(IfTerminal IfTerminal);
    public void visit(IfStart IfStart);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmatchedElse UnmatchedElse);
    public void visit(UnmatchedStatement UnmatchedStatement);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(NonLabeledSingleStatement NonLabeledSingleStatement);
    public void visit(LabelSingleStatement LabelSingleStatement);
    public void visit(NonStatements NonStatements);
    public void visit(ListStatements ListStatements);
    public void visit(MultipleStatements MultipleStatements);
    public void visit(Type Type);
    public void visit(OptArg OptArg);
    public void visit(SingleOptArg SingleOptArg);
    public void visit(OptArgsList OptArgsList);
    public void visit(MethodArgArray MethodArgArray);
    public void visit(MethodArgVariable MethodArgVariable);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(FunctionEnd FunctionEnd);
    public void visit(NoneArgs NoneArgs);
    public void visit(FormalOptArgs FormalOptArgs);
    public void visit(JustOptArgs JustOptArgs);
    public void visit(JustFormPars JustFormPars);
    public void visit(VoidMethodName VoidMethodName);
    public void visit(TypeMethodName TypeMethodName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NonMethodList NonMethodList);
    public void visit(MethodList MethodList);
    public void visit(ConstructorName ConstructorName);
    public void visit(ConstructorDeclaration ConstructorDeclaration);
    public void visit(JustConstructor JustConstructor);
    public void visit(ConstructorMethods ConstructorMethods);
    public void visit(Methods Methods);
    public void visit(EmptyClassBody EmptyClassBody);
    public void visit(NonConstructorClassBody NonConstructorClassBody);
    public void visit(ConstructorClassBody ConstructorClassBody);
    public void visit(NonMultipleVariables NonMultipleVariables);
    public void visit(MultipleVariables MultipleVariables);
    public void visit(NonExtendsMember NonExtendsMember);
    public void visit(ExtendsMember ExtendsMember);
    public void visit(ClassName ClassName);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarName VarName);
    public void visit(ArrayName ArrayName);
    public void visit(SingleVariable SingleVariable);
    public void visit(SingleArray SingleArray);
    public void visit(NonVariables NonVariables);
    public void visit(Variables Variables);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(BoolConstant BoolConstant);
    public void visit(CharConstant CharConstant);
    public void visit(NumConstant NumConstant);
    public void visit(ConstDeclSingle ConstDeclSingle);
    public void visit(NonConstants NonConstants);
    public void visit(Constants Constants);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(ClassDeclarations ClassDeclarations);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(ConstDeclarations ConstDeclarations);
    public void visit(NonDeclarations NonDeclarations);
    public void visit(Declarations Declarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
