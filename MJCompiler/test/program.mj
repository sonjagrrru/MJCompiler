program p
const int size = 10, mize = 5;

class Table {
	int pos[], neg[];
	{
 		void putp (int a, int idx) { this.pos[idx] = a; }
 		void putn (int a, int idx) { this.neg[idx] = a; }
 		int getp (int idx) { return pos[idx]; }
 		int getn (int idx) { return neg[idx]; }
	}
}
class Board extends Table {
	int rows, columns;
	{
		Board(){}
		void proba() {}
	}
}

Board board;
Table val;
{
	void f(char ch, int a = 3, int arg = 2)
	int x;
	{
		break;
		continue;
		return;
		return -5;
		return 5;
		return 2+3;
		print(5);
		x++;
	}
	
	void main() int x, i; char c;
	{
		val = new Table;
		val.pos = new int [size];
		val.neg = new int [size];
		read(x);
		i = 0;
		do{
			val.putp(0, i); 
 			val.putn(0, i);
 			i++;
		}while(i<size);
		skip: f(c, x, i);
		if(5) break; else break;
		board = new Board;
		read(board.rows);
		x = board.rows;
		do{
			if(x <= 0) break;
			if (0 <= x && x < size)
			{
				val.putp(val.getp(x)+1);
			}
			else if (-size < x && x < 0)
			{
				val.putn(val.getn(-x)+1);
 			}
			read(x);
 		}while(true);
	}
}